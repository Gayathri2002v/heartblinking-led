CCS PCM C Compiler, Version 5.015, 5967               31-Jul-24 18:48

               Filename:   C:\Users\LENOVO\Documents\demo code\example\ex3\ex4\main.lst

               ROM used:   626 words (8%)
                           Largest free fragment is 2048
               RAM used:   6 (2%) at main() level
                           10 (3%) worst case
               Stack used: 4 locations
               Stack size: 8

*
0000:  MOVLW  02
0001:  MOVWF  0A
0002:  GOTO   25D
0003:  NOP
.................... #include <main.h> 
.................... #include <16F877A.h> 
.................... //////////// Standard Header file for the PIC16F877A device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877A 
*
0164:  BSF    0A.0
0165:  BCF    0A.1
0166:  BCF    0A.2
0167:  ADDWF  02,F
0168:  GOTO   00A
0169:  GOTO   014
016A:  GOTO   01E
016B:  GOTO   028
016C:  GOTO   032
016D:  GOTO   03C
016E:  GOTO   046
016F:  GOTO   050
0170:  GOTO   05A
0171:  GOTO   064
0172:  GOTO   06E
0173:  GOTO   078
0174:  GOTO   082
0175:  GOTO   08C
0176:  GOTO   096
0177:  GOTO   0A0
0178:  GOTO   0AA
0179:  GOTO   0B4
017A:  GOTO   0C0
017B:  GOTO   0CC
017C:  GOTO   0D8
017D:  GOTO   0E4
017E:  GOTO   0F0
017F:  GOTO   0FC
0180:  GOTO   108
0181:  GOTO   114
0182:  GOTO   11E
0183:  GOTO   128
0184:  GOTO   132
0185:  GOTO   13C
0186:  GOTO   146
0187:  GOTO   150
0188:  GOTO   15A
....................  
.................... #list 
....................  
.................... #device ADC=16 
....................  
.................... #FUSES NOWDT                 	//No Watch Dog Timer 
.................... #FUSES NOBROWNOUT            	//No brownout reset 
.................... #FUSES NOLVP                 	//No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
....................  
.................... #use delay(crystal=4000000) 
0189:  MOVLW  23
018A:  MOVWF  04
018B:  BCF    03.7
018C:  MOVF   00,W
018D:  BTFSC  03.2
018E:  GOTO   19D
018F:  MOVLW  01
0190:  MOVWF  78
0191:  CLRF   77
0192:  DECFSZ 77,F
0193:  GOTO   192
0194:  DECFSZ 78,F
0195:  GOTO   191
0196:  MOVLW  4A
0197:  MOVWF  77
0198:  DECFSZ 77,F
0199:  GOTO   198
019A:  GOTO   19B
019B:  DECFSZ 00,F
019C:  GOTO   18F
019D:  RETURN
....................  
....................  
.................... //----------------------------------------------------------------------------- 
.................... void controled(char name,int1 value); 
.................... void on (void); 
.................... void off(void); 
.................... void onoff(void); 
.................... void effect1(void); 
.................... void effect2(void); 
.................... void effect3(void); 
.................... void effect4(void); 
.................... //----------------------------------------------------------------------------- 
.................... void main() 
*
025D:  MOVF   03,W
025E:  ANDLW  1F
025F:  MOVWF  03
0260:  MOVLW  FF
0261:  MOVWF  20
0262:  BSF    03.5
0263:  BSF    1F.0
0264:  BSF    1F.1
0265:  BSF    1F.2
0266:  BCF    1F.3
0267:  MOVLW  07
0268:  MOVWF  1C
0269:  BCF    03.7
.................... { 
....................  
....................    while(TRUE) 
....................    { 
....................       //TODO: User Code 
....................      onoff(); 
026A:  BCF    03.5
026B:  GOTO   1AA
....................       effect1(); 
026C:  GOTO   1C8
....................       effect2(); 
026D:  GOTO   1E1
....................      effect3(); 
026E:  GOTO   202
....................    effect4(); 
026F:  GOTO   223
0270:  GOTO   26B
....................    } 
....................  
.................... } 
.................... //----------------------------------------------------------------------------- 
0271:  SLEEP
.................... void controled(char name,int1 value){ 
.................... switch (name) 
*
0004:  MOVF   23,W
0005:  ADDLW  DF
0006:  BTFSC  03.0
0007:  GOTO   163
0008:  ADDLW  21
0009:  GOTO   164
....................  { 
....................       case 0: 
....................       { 
....................       output_bit(PIN_A4,value); 
000A:  MOVF   24,F
000B:  BTFSS  03.2
000C:  GOTO   00F
000D:  BCF    05.4
000E:  GOTO   010
000F:  BSF    05.4
0010:  BSF    03.5
0011:  BCF    05.4
....................       break; 
0012:  BCF    03.5
0013:  GOTO   163
....................       } 
....................       case 1: 
....................       { 
....................       output_bit(PIN_A0,value); 
0014:  MOVF   24,F
0015:  BTFSS  03.2
0016:  GOTO   019
0017:  BCF    05.0
0018:  GOTO   01A
0019:  BSF    05.0
001A:  BSF    03.5
001B:  BCF    05.0
....................       break; 
001C:  BCF    03.5
001D:  GOTO   163
....................       } 
....................        case 2: 
....................       { 
....................       output_bit(PIN_A1,value); 
001E:  MOVF   24,F
001F:  BTFSS  03.2
0020:  GOTO   023
0021:  BCF    05.1
0022:  GOTO   024
0023:  BSF    05.1
0024:  BSF    03.5
0025:  BCF    05.1
....................       break; 
0026:  BCF    03.5
0027:  GOTO   163
....................       } 
....................        case 3: 
....................       { 
....................       output_bit(PIN_A2,value); 
0028:  MOVF   24,F
0029:  BTFSS  03.2
002A:  GOTO   02D
002B:  BCF    05.2
002C:  GOTO   02E
002D:  BSF    05.2
002E:  BSF    03.5
002F:  BCF    05.2
....................       break; 
0030:  BCF    03.5
0031:  GOTO   163
....................       } 
....................        case 4: 
....................       { 
....................       output_bit(PIN_A3,value); 
0032:  MOVF   24,F
0033:  BTFSS  03.2
0034:  GOTO   037
0035:  BCF    05.3
0036:  GOTO   038
0037:  BSF    05.3
0038:  BSF    03.5
0039:  BCF    05.3
....................       break; 
003A:  BCF    03.5
003B:  GOTO   163
....................       } 
....................        case 5: 
....................       { 
....................       output_bit(PIN_A5,value); 
003C:  MOVF   24,F
003D:  BTFSS  03.2
003E:  GOTO   041
003F:  BCF    05.5
0040:  GOTO   042
0041:  BSF    05.5
0042:  BSF    03.5
0043:  BCF    05.5
....................       break; 
0044:  BCF    03.5
0045:  GOTO   163
....................       } 
....................        case 6: 
....................       { 
....................       output_bit(PIN_E0,value); 
0046:  MOVF   24,F
0047:  BTFSS  03.2
0048:  GOTO   04B
0049:  BCF    09.0
004A:  GOTO   04C
004B:  BSF    09.0
004C:  BSF    03.5
004D:  BCF    09.0
....................       break; 
004E:  BCF    03.5
004F:  GOTO   163
....................       } 
....................        case 7: 
....................       { 
....................       output_bit(PIN_E1,value); 
0050:  MOVF   24,F
0051:  BTFSS  03.2
0052:  GOTO   055
0053:  BCF    09.1
0054:  GOTO   056
0055:  BSF    09.1
0056:  BSF    03.5
0057:  BCF    09.1
....................       break; 
0058:  BCF    03.5
0059:  GOTO   163
....................       } 
....................        case 8: 
....................       { 
....................       output_bit(PIN_E2,value); 
005A:  MOVF   24,F
005B:  BTFSS  03.2
005C:  GOTO   05F
005D:  BCF    09.2
005E:  GOTO   060
005F:  BSF    09.2
0060:  BSF    03.5
0061:  BCF    09.2
....................       break; 
0062:  BCF    03.5
0063:  GOTO   163
....................       } 
....................        case 9: 
....................       { 
....................       output_bit(PIN_B0,value); 
0064:  MOVF   24,F
0065:  BTFSS  03.2
0066:  GOTO   069
0067:  BCF    06.0
0068:  GOTO   06A
0069:  BSF    06.0
006A:  BSF    03.5
006B:  BCF    06.0
....................       break; 
006C:  BCF    03.5
006D:  GOTO   163
....................       } 
....................        case 10: 
....................       { 
....................       output_bit(PIN_B1,value); 
006E:  MOVF   24,F
006F:  BTFSS  03.2
0070:  GOTO   073
0071:  BCF    06.1
0072:  GOTO   074
0073:  BSF    06.1
0074:  BSF    03.5
0075:  BCF    06.1
....................       break; 
0076:  BCF    03.5
0077:  GOTO   163
....................       } 
....................         case 11: 
....................       { 
....................       output_bit(PIN_B2,value); 
0078:  MOVF   24,F
0079:  BTFSS  03.2
007A:  GOTO   07D
007B:  BCF    06.2
007C:  GOTO   07E
007D:  BSF    06.2
007E:  BSF    03.5
007F:  BCF    06.2
....................       break; 
0080:  BCF    03.5
0081:  GOTO   163
....................       }   
....................       case 12: 
....................       { 
....................       output_bit(PIN_B3,value); 
0082:  MOVF   24,F
0083:  BTFSS  03.2
0084:  GOTO   087
0085:  BCF    06.3
0086:  GOTO   088
0087:  BSF    06.3
0088:  BSF    03.5
0089:  BCF    06.3
....................       break; 
008A:  BCF    03.5
008B:  GOTO   163
....................       } 
....................         case 13: 
....................       { 
....................       output_bit(PIN_B4,value); 
008C:  MOVF   24,F
008D:  BTFSS  03.2
008E:  GOTO   091
008F:  BCF    06.4
0090:  GOTO   092
0091:  BSF    06.4
0092:  BSF    03.5
0093:  BCF    06.4
....................       break; 
0094:  BCF    03.5
0095:  GOTO   163
....................       } 
....................         case 14: 
....................       { 
....................       output_bit(PIN_B5,value); 
0096:  MOVF   24,F
0097:  BTFSS  03.2
0098:  GOTO   09B
0099:  BCF    06.5
009A:  GOTO   09C
009B:  BSF    06.5
009C:  BSF    03.5
009D:  BCF    06.5
....................       break; 
009E:  BCF    03.5
009F:  GOTO   163
....................       } 
....................         case 15: 
....................       { 
....................       output_bit(PIN_B6,value); 
00A0:  MOVF   24,F
00A1:  BTFSS  03.2
00A2:  GOTO   0A5
00A3:  BCF    06.6
00A4:  GOTO   0A6
00A5:  BSF    06.6
00A6:  BSF    03.5
00A7:  BCF    06.6
....................       break; 
00A8:  BCF    03.5
00A9:  GOTO   163
....................       } 
....................         case 16: 
....................       { 
....................       output_bit(PIN_B7,value); 
00AA:  MOVF   24,F
00AB:  BTFSS  03.2
00AC:  GOTO   0AF
00AD:  BCF    06.7
00AE:  GOTO   0B0
00AF:  BSF    06.7
00B0:  BSF    03.5
00B1:  BCF    06.7
....................       break; 
00B2:  BCF    03.5
00B3:  GOTO   163
....................       } 
....................         case 17: 
....................       { 
....................       output_bit(PIN_C0,value); 
00B4:  MOVF   24,F
00B5:  BTFSS  03.2
00B6:  GOTO   0B9
00B7:  BCF    07.0
00B8:  GOTO   0BA
00B9:  BSF    07.0
00BA:  BCF    20.0
00BB:  MOVF   20,W
00BC:  BSF    03.5
00BD:  MOVWF  07
....................       break; 
00BE:  BCF    03.5
00BF:  GOTO   163
....................       } 
....................         case 18: 
....................       { 
....................       output_bit(PIN_C1,value); 
00C0:  MOVF   24,F
00C1:  BTFSS  03.2
00C2:  GOTO   0C5
00C3:  BCF    07.1
00C4:  GOTO   0C6
00C5:  BSF    07.1
00C6:  BCF    20.1
00C7:  MOVF   20,W
00C8:  BSF    03.5
00C9:  MOVWF  07
....................       break; 
00CA:  BCF    03.5
00CB:  GOTO   163
....................       } 
....................        case 19: 
....................       { 
....................       output_bit(PIN_C2,value); 
00CC:  MOVF   24,F
00CD:  BTFSS  03.2
00CE:  GOTO   0D1
00CF:  BCF    07.2
00D0:  GOTO   0D2
00D1:  BSF    07.2
00D2:  BCF    20.2
00D3:  MOVF   20,W
00D4:  BSF    03.5
00D5:  MOVWF  07
....................       break; 
00D6:  BCF    03.5
00D7:  GOTO   163
....................       } 
....................         case 20: 
....................       { 
....................       output_bit(PIN_C3,value); 
00D8:  MOVF   24,F
00D9:  BTFSS  03.2
00DA:  GOTO   0DD
00DB:  BCF    07.3
00DC:  GOTO   0DE
00DD:  BSF    07.3
00DE:  BCF    20.3
00DF:  MOVF   20,W
00E0:  BSF    03.5
00E1:  MOVWF  07
....................       break; 
00E2:  BCF    03.5
00E3:  GOTO   163
....................       } 
....................        case 21: 
....................       { 
....................       output_bit(PIN_C4,value); 
00E4:  MOVF   24,F
00E5:  BTFSS  03.2
00E6:  GOTO   0E9
00E7:  BCF    07.4
00E8:  GOTO   0EA
00E9:  BSF    07.4
00EA:  BCF    20.4
00EB:  MOVF   20,W
00EC:  BSF    03.5
00ED:  MOVWF  07
....................       break; 
00EE:  BCF    03.5
00EF:  GOTO   163
....................       } 
....................         case 22: 
....................       { 
....................       output_bit(PIN_C5,value); 
00F0:  MOVF   24,F
00F1:  BTFSS  03.2
00F2:  GOTO   0F5
00F3:  BCF    07.5
00F4:  GOTO   0F6
00F5:  BSF    07.5
00F6:  BCF    20.5
00F7:  MOVF   20,W
00F8:  BSF    03.5
00F9:  MOVWF  07
....................       break; 
00FA:  BCF    03.5
00FB:  GOTO   163
....................       } 
....................        case 23: 
....................       { 
....................       output_bit(PIN_C6,value); 
00FC:  MOVF   24,F
00FD:  BTFSS  03.2
00FE:  GOTO   101
00FF:  BCF    07.6
0100:  GOTO   102
0101:  BSF    07.6
0102:  BCF    20.6
0103:  MOVF   20,W
0104:  BSF    03.5
0105:  MOVWF  07
....................       break; 
0106:  BCF    03.5
0107:  GOTO   163
....................       } 
....................         case 24: 
....................       { 
....................       output_bit(PIN_C7,value); 
0108:  MOVF   24,F
0109:  BTFSS  03.2
010A:  GOTO   10D
010B:  BCF    07.7
010C:  GOTO   10E
010D:  BSF    07.7
010E:  BCF    20.7
010F:  MOVF   20,W
0110:  BSF    03.5
0111:  MOVWF  07
....................       break; 
0112:  BCF    03.5
0113:  GOTO   163
....................       } 
....................         case 25: 
....................       { 
....................       output_bit(PIN_D0,value); 
0114:  MOVF   24,F
0115:  BTFSS  03.2
0116:  GOTO   119
0117:  BCF    08.0
0118:  GOTO   11A
0119:  BSF    08.0
011A:  BSF    03.5
011B:  BCF    08.0
....................       break; 
011C:  BCF    03.5
011D:  GOTO   163
....................       } 
....................        case 26: 
....................       { 
....................       output_bit(PIN_D1,value); 
011E:  MOVF   24,F
011F:  BTFSS  03.2
0120:  GOTO   123
0121:  BCF    08.1
0122:  GOTO   124
0123:  BSF    08.1
0124:  BSF    03.5
0125:  BCF    08.1
....................       break; 
0126:  BCF    03.5
0127:  GOTO   163
....................       } 
....................        case 27: 
....................       { 
....................       output_bit(PIN_D2,value); 
0128:  MOVF   24,F
0129:  BTFSS  03.2
012A:  GOTO   12D
012B:  BCF    08.2
012C:  GOTO   12E
012D:  BSF    08.2
012E:  BSF    03.5
012F:  BCF    08.2
....................       break; 
0130:  BCF    03.5
0131:  GOTO   163
....................       } 
....................        case 28: 
....................       { 
....................       output_bit(PIN_D3,value); 
0132:  MOVF   24,F
0133:  BTFSS  03.2
0134:  GOTO   137
0135:  BCF    08.3
0136:  GOTO   138
0137:  BSF    08.3
0138:  BSF    03.5
0139:  BCF    08.3
....................       break; 
013A:  BCF    03.5
013B:  GOTO   163
....................       } 
....................        case 29: 
....................       { 
....................       output_bit(PIN_D4,value); 
013C:  MOVF   24,F
013D:  BTFSS  03.2
013E:  GOTO   141
013F:  BCF    08.4
0140:  GOTO   142
0141:  BSF    08.4
0142:  BSF    03.5
0143:  BCF    08.4
....................       break; 
0144:  BCF    03.5
0145:  GOTO   163
....................       } 
....................        case 30: 
....................       { 
....................       output_bit(PIN_D5,value); 
0146:  MOVF   24,F
0147:  BTFSS  03.2
0148:  GOTO   14B
0149:  BCF    08.5
014A:  GOTO   14C
014B:  BSF    08.5
014C:  BSF    03.5
014D:  BCF    08.5
....................       break; 
014E:  BCF    03.5
014F:  GOTO   163
....................       } 
....................        case 31: 
....................       { 
....................       output_bit(PIN_D6,value); 
0150:  MOVF   24,F
0151:  BTFSS  03.2
0152:  GOTO   155
0153:  BCF    08.6
0154:  GOTO   156
0155:  BSF    08.6
0156:  BSF    03.5
0157:  BCF    08.6
....................       break; 
0158:  BCF    03.5
0159:  GOTO   163
....................       } 
....................        case 32: 
....................       { 
....................       output_bit(PIN_D7,value); 
015A:  MOVF   24,F
015B:  BTFSS  03.2
015C:  GOTO   15F
015D:  BCF    08.7
015E:  GOTO   160
015F:  BSF    08.7
0160:  BSF    03.5
0161:  BCF    08.7
....................       break; 
0162:  BCF    03.5
....................       } 
.................... } 
0163:  RETURN
....................  
.................... } 
.................... void on(void) 
....................  
.................... { 
.................... char i; 
.................... for(i=0;i<=32;i++) 
*
01AA:  CLRF   21
01AB:  MOVF   21,W
01AC:  SUBLW  20
01AD:  BTFSS  03.0
01AE:  GOTO   1B6
.................... { 
....................  controled(i,1); 
01AF:  MOVF   21,W
01B0:  MOVWF  23
01B1:  MOVLW  01
01B2:  MOVWF  24
01B3:  CALL   004
01B4:  INCF   21,F
01B5:  GOTO   1AB
.................... } 
....................  
....................  
.................... } 
.................... void off(void) 
....................  
.................... { 
.................... char i; 
.................... for(i=0;i<=32;i++) 
*
019E:  CLRF   22
019F:  MOVF   22,W
01A0:  SUBLW  20
01A1:  BTFSS  03.0
01A2:  GOTO   1A9
.................... { 
....................  controled(i,0); 
01A3:  MOVF   22,W
01A4:  MOVWF  23
01A5:  CLRF   24
01A6:  CALL   004
01A7:  INCF   22,F
01A8:  GOTO   19F
.................... } 
01A9:  RETURN
....................  
.................... } 
....................  
.................... void onoff(void) 
.................... { 
.................... on(); 
.................... delay_ms(300); 
*
01B6:  MOVLW  02
01B7:  MOVWF  21
01B8:  MOVLW  96
01B9:  MOVWF  23
01BA:  CALL   189
01BB:  DECFSZ 21,F
01BC:  GOTO   1B8
.................... off(); 
01BD:  CALL   19E
.................... delay_ms(300); 
01BE:  MOVLW  02
01BF:  MOVWF  21
01C0:  MOVLW  96
01C1:  MOVWF  23
01C2:  CALL   189
01C3:  DECFSZ 21,F
01C4:  GOTO   1C0
01C5:  BCF    0A.3
01C6:  BCF    0A.4
01C7:  GOTO   26C (RETURN)
.................... } 
....................  
.................... void effect1(void) 
.................... { 
.................... char i; 
.................... for(i=0;i<=16;i++) 
01C8:  CLRF   21
01C9:  MOVF   21,W
01CA:  SUBLW  10
01CB:  BTFSS  03.0
01CC:  GOTO   1DE
.................... { 
.................... controled(i,1); 
01CD:  MOVF   21,W
01CE:  MOVWF  23
01CF:  MOVLW  01
01D0:  MOVWF  24
01D1:  CALL   004
.................... controled(33-i,1); 
01D2:  MOVF   21,W
01D3:  SUBLW  21
01D4:  MOVWF  22
01D5:  MOVWF  23
01D6:  MOVLW  01
01D7:  MOVWF  24
01D8:  CALL   004
.................... delay_ms(100); 
01D9:  MOVLW  64
01DA:  MOVWF  23
01DB:  CALL   189
01DC:  INCF   21,F
01DD:  GOTO   1C9
.................... } 
01DE:  BCF    0A.3
01DF:  BCF    0A.4
01E0:  GOTO   26D (RETURN)
.................... } 
.................... void effect2(void) 
.................... { 
.................... char i; 
.................... off(); 
01E1:  CALL   19E
.................... delay_ms(300); 
01E2:  MOVLW  02
01E3:  MOVWF  22
01E4:  MOVLW  96
01E5:  MOVWF  23
01E6:  CALL   189
01E7:  DECFSZ 22,F
01E8:  GOTO   1E4
.................... for(i=0;i<=16;i++) 
01E9:  CLRF   21
01EA:  MOVF   21,W
01EB:  SUBLW  10
01EC:  BTFSS  03.0
01ED:  GOTO   1FF
.................... { 
.................... controled(i,1); 
01EE:  MOVF   21,W
01EF:  MOVWF  23
01F0:  MOVLW  01
01F1:  MOVWF  24
01F2:  CALL   004
.................... controled(16+i,1); 
01F3:  MOVLW  10
01F4:  ADDWF  21,W
01F5:  MOVWF  22
01F6:  MOVWF  23
01F7:  MOVLW  01
01F8:  MOVWF  24
01F9:  CALL   004
.................... delay_ms(50); 
01FA:  MOVLW  32
01FB:  MOVWF  23
01FC:  CALL   189
01FD:  INCF   21,F
01FE:  GOTO   1EA
.................... } 
01FF:  BCF    0A.3
0200:  BCF    0A.4
0201:  GOTO   26E (RETURN)
.................... } 
....................  
.................... void effect3(void) 
.................... { 
.................... char i; 
.................... off(); 
0202:  CALL   19E
.................... delay_ms(300); 
0203:  MOVLW  02
0204:  MOVWF  22
0205:  MOVLW  96
0206:  MOVWF  23
0207:  CALL   189
0208:  DECFSZ 22,F
0209:  GOTO   205
.................... for(i=0;i<=32;i++) 
020A:  CLRF   21
020B:  MOVF   21,W
020C:  SUBLW  20
020D:  BTFSS  03.0
020E:  GOTO   220
.................... { 
.................... controled(i,1); 
020F:  MOVF   21,W
0210:  MOVWF  23
0211:  MOVLW  01
0212:  MOVWF  24
0213:  CALL   004
.................... delay_ms(50); 
0214:  MOVLW  32
0215:  MOVWF  23
0216:  CALL   189
.................... controled(i,0); 
0217:  MOVF   21,W
0218:  MOVWF  23
0219:  CLRF   24
021A:  CALL   004
.................... delay_ms(50); 
021B:  MOVLW  32
021C:  MOVWF  23
021D:  CALL   189
021E:  INCF   21,F
021F:  GOTO   20B
.................... } 
0220:  BCF    0A.3
0221:  BCF    0A.4
0222:  GOTO   26F (RETURN)
.................... } 
....................  
.................... void effect4(void) 
.................... { 
.................... char i; 
.................... for(i=0;i<=16;i++) 
0223:  CLRF   21
0224:  MOVF   21,W
0225:  SUBLW  10
0226:  BTFSS  03.0
0227:  GOTO   22F
.................... { 
.................... controled(i,1); 
0228:  MOVF   21,W
0229:  MOVWF  23
022A:  MOVLW  01
022B:  MOVWF  24
022C:  CALL   004
022D:  INCF   21,F
022E:  GOTO   224
....................  
.................... } 
.................... delay_ms(300); 
022F:  MOVLW  02
0230:  MOVWF  22
0231:  MOVLW  96
0232:  MOVWF  23
0233:  CALL   189
0234:  DECFSZ 22,F
0235:  GOTO   231
.................... off(); 
0236:  CALL   19E
.................... delay_ms(300); 
0237:  MOVLW  02
0238:  MOVWF  22
0239:  MOVLW  96
023A:  MOVWF  23
023B:  CALL   189
023C:  DECFSZ 22,F
023D:  GOTO   239
.................... for(i=16;i<=32;i++) 
023E:  MOVLW  10
023F:  MOVWF  21
0240:  MOVF   21,W
0241:  SUBLW  20
0242:  BTFSS  03.0
0243:  GOTO   24B
.................... { 
.................... controled(i,1); 
0244:  MOVF   21,W
0245:  MOVWF  23
0246:  MOVLW  01
0247:  MOVWF  24
0248:  CALL   004
0249:  INCF   21,F
024A:  GOTO   240
....................  
.................... } 
.................... delay_ms(300); 
024B:  MOVLW  02
024C:  MOVWF  22
024D:  MOVLW  96
024E:  MOVWF  23
024F:  CALL   189
0250:  DECFSZ 22,F
0251:  GOTO   24D
.................... off(); 
0252:  CALL   19E
.................... delay_ms(300); 
0253:  MOVLW  02
0254:  MOVWF  22
0255:  MOVLW  96
0256:  MOVWF  23
0257:  CALL   189
0258:  DECFSZ 22,F
0259:  GOTO   255
025A:  BCF    0A.3
025B:  BCF    0A.4
025C:  GOTO   270 (RETURN)
.................... } 

Configuration Fuses:
   Word  1: 3F31   XT NOWDT PUT NOBROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
